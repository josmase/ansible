- name: Update package repositories
  block:
    - name: Update package repositories (Debian)
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Update package repositories (Arch)
      pacman:
        update_cache: yes
      when: ansible_facts['os_family'] == "Archlinux"

- name: Install required packages
  block:
    - name: Install required packages (Debian)
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - ca-certificates
        - curl
        - gnupg
      when: ansible_facts['os_family'] == "Debian"

    - name: Install required packages (Arch)
      pacman:
        name: "{{ item }}"
        state: present
      loop:
        - ca-certificates
        - curl
        - gnupg
      when: ansible_facts['os_family'] == "Archlinux"

- name: Docker install steps (Debian)
  block:
    - name: Create directory for APT keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download and install Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        executable: /bin/bash

    - name: Create APT sources directory
      file:
        path: /etc/apt/sources.list.d
        state: directory
        mode: "0755"

    - name: Get dpkg architecture
      command: dpkg --print-architecture
      register: dpkg_architecture

    - name: Add Docker repository to APT sources
      lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: "deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        create: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install Docker packages (Arch)
  pacman:
    name:
      - docker
      - docker-compose
      - containerd
    state: present
  when: ansible_facts['os_family'] == "Archlinux"

- name: Post install
  block:
    - name: Create docker group
      group:
        name: "{{ docker_group }}"
        state: present

    - name: Add user to group
      user:
        name: "{{ docker_user }}"
        groups:
          - "{{ docker_group }}"
        append: yes

    - name: Start and Enable docker
      systemd:
        name: docker
        state: started
        enabled: yes
        daemon-reload: yes

- name: Configure Docker directories and deploy helper scripts
  block:
    - name: Create docker directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: '0770'
      loop:
        - "{{ docker_compose_dir }}"
        - "{{ docker_script_dir }}"
        - "{{ docker_data_dir }}"
        - "{{ docker_storage_dir }}"

    - name: Add script templates
      template:
        src: "scripts/{{ item }}.sh"
        dest: "{{ docker_script_dir }}/{{ item }}.sh"
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: '0770'
      loop: "{{ docker_script_templates }}"
  when: docker_setup_enabled | default(true) | bool