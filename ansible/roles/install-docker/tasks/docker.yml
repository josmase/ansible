- name: Remove specified Docker-related packages
  apt:
    name: "{{ item }}"
    state: absent
  loop:
    - docker.io
    - docker-doc
    - docker-compose
    - docker-compose-v2
    - podman-docker
    - containerd
    - runc

- name: Update APT repositories
  apt:
    update_cache: yes

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - ca-certificates
    - curl
    - gnupg

- name: Create directory for APT keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Download and install Docker GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    executable: /bin/bash

- name: Create APT sources directory
  file:
    path: /etc/apt/sources.list.d
    state: directory
    mode: "0755"

#- name: Create Docker APT sources list
#  file:
#    path: /etc/apt/sources.list.d/docker.list
#    state: touch

- name: Get dpkg architecture
  command: dpkg --print-architecture
  register: dpkg_architecture

- name: Add Docker repository to APT sources
  lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: "deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    create: yes

- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Create docker group
  group:
    name: docker
    state: present

- name: Add user to group
  user:
    name: "{{ main_username }}"
    groups:
      - docker
    append: yes

- name: Start and Enable docker
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon-reload: yes

#- name: Log into private registry and force re-authorization
#  community.docker.docker_login:
#    registry_url: "{{ docker_registry_domain }}"
#    username: "{{ docker_registry_user }}"
#    password: "{{ docker_registry_password }}"
#    reauthorize: true
#    validate_certs: true

- name: Create docker template directory
  file:
    path: "{{ docker_compose_dir }}"
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Create docker script directory
  file:
    path: "{{ docker_script_dir }}"
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Deploy scripts
  template:
    src: ../templates/scripts/{{ item }}.sh
    dest: "{{ docker_script_dir }}/{{ item }}.sh"
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
    mode: "0740"
  loop: "{{ script_templates }}"
